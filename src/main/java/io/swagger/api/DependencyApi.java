/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.0).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Dependency;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-02-10T19:00:55.531Z")

@Api(value = "dependency", description = "the dependency API")
public interface DependencyApi {

    @ApiOperation(value = "adds a new Dependency", nickname = "addDependency", notes = "Adds a Dependency to the system", tags={ "admins", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Dependency created"),
        @ApiResponse(code = 400, message = "invalid input, object invalid"),
        @ApiResponse(code = 409, message = "an existing item already exists") })
    @RequestMapping(value = "/dependency/{idApplication}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> addDependency(@ApiParam(value = "pass an optional search string for looking up requirement",required=true) @PathVariable("idApplication") String idApplication,@ApiParam(value = "Dependency to add"  )  @Valid @RequestBody Dependency dependency);


    @ApiOperation(value = "delete an new Dependency", nickname = "deleteDependency", notes = "delete an Dependency to the system", tags={ "admins", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Dependency delete"),
        @ApiResponse(code = 400, message = "invalid input, object invalid"),
        @ApiResponse(code = 409, message = "an existing item does not exists") })
    @RequestMapping(value = "/dependency/{idApplication}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteDependency(@ApiParam(value = "pass an optional search string for looking up requirement",required=true) @PathVariable("idApplication") String idApplication,@ApiParam(value = "Dependency to delete"  )  @Valid @RequestBody Dependency dependency);


    @ApiOperation(value = "searches dependency by idApplication", nickname = "searchDependencyApp", notes = "By passing in the appropriate options, you can search for available inventory in the system ", response = Dependency.class, responseContainer = "List", tags={ "developers","managers", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "search results matching criteria", response = Dependency.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "bad input parameter") })
    @RequestMapping(value = "/dependency/{idApplication}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Dependency>> searchDependencyApp(@ApiParam(value = "pass an optional search string for looking up requirement",required=true) @PathVariable("idApplication") String idApplication);


    @ApiOperation(value = "update a Dependency", nickname = "updateDependency", notes = "update a Dependency to the system", tags={ "admins", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Dependency update"),
        @ApiResponse(code = 400, message = "invalid input, object invalid"),
        @ApiResponse(code = 409, message = "an existing item does not exists") })
    @RequestMapping(value = "/dependency/{idApplication}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> updateDependency(@ApiParam(value = "pass an optional search string for looking up requirement",required=true) @PathVariable("idApplication") String idApplication,@ApiParam(value = "Dependency to update"  )  @Valid @RequestBody Dependency dependency);

}
